{"ast":null,"code":"import _slicedToArray from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryordan/Projects/mars-weather/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport AirTemperature from \"./AirTemperature\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      types: {},\n      type: \"temp\",\n      range: [] // range for brush\n\n    };\n\n    _this.updateType = function (e) {\n      _this.setState({\n        type: e.target.value\n      });\n    };\n\n    _this.updateRange = function (range) {\n      _this.setState({\n        range: range\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Promise.all([//fetch('https://api.nasa.gov/insight_weather/?api_key=JZsVqaKDbQ0Z7YD9Qla4yKzWelaUjP2rbLAF4qTG&feedtype=json&ver=1.0')\n      fetch(\"\".concat(process.env.PUBLIC_URL || \"\", \"/temp.json\"))]).then(function (responses) {\n        return Promise.all(responses.map(function (resp) {\n          return resp.json();\n        }));\n      }).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            temp = _ref2[0],\n            pressure = _ref2[1];\n\n        var newTemp = Object.values(temp); //const newPressure = Object.values(pressure);\n        //newTemp.forEach(sol => (sol.AT ? (sol.AT.date = sol.Last_UTC) : ''));\n\n        console.log(\"newTemp: \" + JSON.stringify(newTemp));\n\n        _this2.setState({\n          types: {\n            temp: newTemp //pressure: newPressure\n\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.types[this.state.type];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"2019 Mars\", React.createElement(\"select\", {\n        name: \"type\",\n        onChange: this.updateType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, [{\n        label: \"Air Temperature\",\n        value: \"temp\"\n      }, {\n        label: \"Wind Pressure\",\n        value: \"pressure\"\n      }].map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, option.label);\n      }))), React.createElement(AirTemperature, {\n        data: data,\n        range: this.state.range,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"(Mars weather data from\", \" \", React.createElement(\"a\", {\n        href: \"https://api.nasa.gov/\",\n        target: \"_new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"nasa.gov\"), \")\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ryordan/Projects/mars-weather/src/App.js"],"names":["React","AirTemperature","App","state","types","type","range","updateType","e","setState","target","value","updateRange","Promise","all","fetch","process","env","PUBLIC_URL","then","responses","map","resp","json","temp","pressure","newTemp","Object","values","console","log","JSON","stringify","data","label","option","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,MAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD,CAGI;;AAHJ,K;;UA0BRC,U,GAAa,UAAAC,CAAC,EAAI;AAChB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,K;;UAEDC,W,GAAc,UAAAN,KAAK,EAAI;AACrB,YAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;wCA1BmB;AAAA;;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAY,CACV;AACAC,MAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0B,EAA9B,gBAFK,CAAZ,EAIGC,IAJH,CAIQ,UAAAC,SAAS;AAAA,eAAIP,OAAO,CAACC,GAAR,CAAYM,SAAS,CAACC,GAAV,CAAc,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,SAAlB,CAAZ,CAAJ;AAAA,OAJjB,EAKGJ,IALH,CAKQ,gBAAsB;AAAA;AAAA,YAApBK,IAAoB;AAAA,YAAdC,QAAc;;AAC1B,YAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAhB,CAD0B,CAE1B;AACA;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAA1B;;AACA,QAAA,MAAI,CAACjB,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAE;AACLoB,YAAAA,IAAI,EAAEE,OADD,CAEL;;AAFK;AADK,SAAd;AAMD,OAhBH;AAiBD;;;6BAUQ;AACP,UAAMO,IAAI,GAAG,KAAK9B,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWE,IAA5B,CAAb;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAE,KAAKE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CACC;AAAE2B,QAAAA,KAAK,EAAE,iBAAT;AAA4BvB,QAAAA,KAAK,EAAE;AAAnC,OADD,EAEC;AAAEuB,QAAAA,KAAK,EAAE,eAAT;AAA0BvB,QAAAA,KAAK,EAAE;AAAjC,OAFD,EAGCU,GAHD,CAGK,UAAAc,MAAM,EAAI;AACd,eACE;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACxB,KAApB;AAA2B,UAAA,KAAK,EAAEwB,MAAM,CAACxB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGwB,MAAM,CAACD,KADV,CADF;AAKD,OATA,CADH,CAFF,CADF,EAgBE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAED,IAAtB;AAA4B,QAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWG,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC0B,GAD1B,EAEE;AAAG,QAAA,IAAI,EAAC,uBAAR;AAAgC,QAAA,MAAM,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,MAjBF,CADF;AA2BD;;;;EAjEeN,KAAK,CAACoC,S;;AAoExB,eAAelC,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport AirTemperature from \"./AirTemperature\";\n\nclass App extends React.Component {\n  state = {\n    types: {},\n    type: \"temp\",\n    range: [] // range for brush\n  };\n\n  componentDidMount() {\n    Promise.all([\n      //fetch('https://api.nasa.gov/insight_weather/?api_key=JZsVqaKDbQ0Z7YD9Qla4yKzWelaUjP2rbLAF4qTG&feedtype=json&ver=1.0')\n      fetch(`${process.env.PUBLIC_URL || \"\"}/temp.json`)\n    ])\n      .then(responses => Promise.all(responses.map(resp => resp.json())))\n      .then(([temp, pressure]) => {\n        const newTemp = Object.values(temp);\n        //const newPressure = Object.values(pressure);\n        //newTemp.forEach(sol => (sol.AT ? (sol.AT.date = sol.Last_UTC) : ''));\n        console.log(\"newTemp: \" + JSON.stringify(newTemp));\n        this.setState({\n          types: {\n            temp: newTemp,\n            //pressure: newPressure\n          }\n        });\n      });\n  }\n\n  updateType = e => {\n    this.setState({ type: e.target.value });\n  };\n\n  updateRange = range => {\n    this.setState({ range });\n  };\n\n  render() {\n    const data = this.state.types[this.state.type];\n\n    return (\n      <div className=\"App\">\n        <h1>\n          2019 Mars\n          <select name=\"type\" onChange={this.updateType}>\n            {[\n              { label: \"Air Temperature\", value: \"temp\" },\n              { label: \"Wind Pressure\", value: \"pressure\" }\n            ].map(option => {\n              return (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              );\n            })}\n          </select>\n        </h1>\n        <AirTemperature data={data} range={this.state.range} />\n        <p>\n          (Mars weather data from{\" \"}\n          <a href=\"https://api.nasa.gov/\" target=\"_new\">\n            nasa.gov\n          </a>\n          )\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}