{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryordan/Projects/mars-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryordan/Projects/mars-weather/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport AirTemperature from \"./AirTemperature\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      people: [],\n      types: {},\n      type: \"temp\",\n      range: [] // sol range for brush\n\n    };\n\n    _this.updateType = function (e) {\n      _this.setState({\n        type: e.target.value\n      });\n    };\n\n    _this.updateRange = function (range) {\n      _this.setState({\n        range: range\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, data, newTemp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"\".concat(process.env.PUBLIC_URL || \"\", \"/temp.json\"));\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                newTemp = Object.values(data.results);\n                console.log(\"newTemp: \" + JSON.stringify(newTemp));\n                this.setState({\n                  types: {\n                    temp: newTemp\n                  }\n                });\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.types[this.state.type];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"2019 Mars\", React.createElement(\"select\", {\n        name: \"type\",\n        onChange: this.updateType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, [{\n        label: \"Air Temperature\",\n        value: \"temp\"\n      }, {\n        label: \"Wind Pressure\",\n        value: \"pressure\"\n      }].map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, option.label);\n      }))), React.createElement(AirTemperature, {\n        data: data,\n        range: this.state.range,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"(Mars weather data from\", \" \", React.createElement(\"a\", {\n        href: \"nasa.gov\",\n        target: \"_new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"nasa.gov\"), \")\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ryordan/Projects/mars-weather/src/App.js"],"names":["React","AirTemperature","App","state","people","types","type","range","updateType","e","setState","target","value","updateRange","fetch","process","env","PUBLIC_URL","response","json","data","newTemp","Object","values","results","console","log","JSON","stringify","temp","label","map","option","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,MAHA;AAINC,MAAAA,KAAK,EAAE,EAJD,CAII;;AAJJ,K;;UAyCRC,U,GAAa,UAAAC,CAAC,EAAI;AAChB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,K;;UAEDC,W,GAAc,UAAAN,KAAK,EAAI;AACrB,YAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;;;;;;;;;;;;uBArC0BO,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0B,EAA9B,gB;;;AAAtBC,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;AACAC,gBAAAA,O,GAAUC,MAAM,CAACC,MAAP,CAAcH,IAAI,CAACI,OAAnB,C;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA1B;AACA,qBAAKX,QAAL,CAAc;AACZL,kBAAAA,KAAK,EAAE;AACLwB,oBAAAA,IAAI,EAAER;AADD;AADK,iBAAd;;;;;;;AAMAI,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;6BA6BK;AACP,UAAMN,IAAI,GAAG,KAAKjB,KAAL,CAAWE,KAAX,CAAiB,KAAKF,KAAL,CAAWG,IAA5B,CAAb;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAE,KAAKE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CACC;AAAEsB,QAAAA,KAAK,EAAE,iBAAT;AAA4BlB,QAAAA,KAAK,EAAE;AAAnC,OADD,EAEC;AAAEkB,QAAAA,KAAK,EAAE,eAAT;AAA0BlB,QAAAA,KAAK,EAAE;AAAjC,OAFD,EAGCmB,GAHD,CAGK,UAAAC,MAAM,EAAI;AACd,eACE;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACpB,KAApB;AAA2B,UAAA,KAAK,EAAEoB,MAAM,CAACpB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGoB,MAAM,CAACF,KADV,CADF;AAKD,OATA,CADH,CAFF,CADF,EAgBE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEV,IAAtB;AAA4B,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWI,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC0B,GAD1B,EAEE;AAAG,QAAA,IAAI,EAAC,UAAR;AAAmB,QAAA,MAAM,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,MAlBF,CADF;AA4BD;;;;EAjFeP,KAAK,CAACiC,S;;AAoFxB,eAAe/B,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport AirTemperature from \"./AirTemperature\";\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    types: {},\n    type: \"temp\",\n    range: [] // sol range for brush\n  };\n\n  async componentDidMount() {\n    try {\n      //const response = await fetch(`${process.env.PUBLIC_URL || \"\"}/temp.json`);\n      const response = await fetch(`${process.env.PUBLIC_URL || \"\"}/temp.json`);\n      const data = await response.json();\n      const newTemp = Object.values(data.results);\n      console.log(\"newTemp: \" + JSON.stringify(newTemp));\n      this.setState({\n        types: {\n          temp: newTemp\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    /**\n    Promise.all([\n      fetch(`${process.env.PUBLIC_URL || \"\"}/temp.json`),\n      fetch(`${process.env.PUBLIC_URL || \"\"}/pressure.json`)\n    ])\n      .then(responses => Promise.all(responses.map(resp => resp.json())))\n      .then(([temp, pressure]) => {\n        const newTemp = Object.values(temp);\n        const newPressure = Object.values(pressure);\n        this.setState({\n          types: {\n            temp: newTemp,\n            pressure: newPressure\n          }\n        });\n      });\n      **/\n  }\n\n  updateType = e => {\n    this.setState({ type: e.target.value });\n  };\n\n  updateRange = range => {\n    this.setState({ range });\n  };\n\n  render() {\n    const data = this.state.types[this.state.type];\n\n    return (\n      <div className=\"App\">\n        <h1>\n          2019 Mars\n          <select name=\"type\" onChange={this.updateType}>\n            {[\n              { label: \"Air Temperature\", value: \"temp\" },\n              { label: \"Wind Pressure\", value: \"pressure\" }\n            ].map(option => {\n              return (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              );\n            })}\n          </select>\n        </h1>\n        <AirTemperature data={data} range={this.state.range} />\n\n        <p>\n          (Mars weather data from{\" \"}\n          <a href=\"nasa.gov\" target=\"_new\">\n            nasa.gov\n          </a>\n          )\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}